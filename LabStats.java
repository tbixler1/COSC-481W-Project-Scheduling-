/*
 * LabStats objects are created in a 2D array in Schedule.java
 * These objects are a GUI for the user to enter information regarding when
 * the lab will be open and the number of people to be assigned to this time
 * slot.
 */
package senior.project;

/**
 *
 * @author Orc 9
 */
public class LabStats extends javax.swing.JFrame {

    /**
     * Creates new form LabStats when calling for new file creation in Schedule.java
     */
    public LabStats() {
        proctorNum = 0;
        tutorsNum = 0;
        minProctors = 0;
        minTutors = 0;
        maxProctors = 0;
        maxTutors = 0;
        //Netbeans initialize
        initComponents();
    }

    //Constructor called to initialize all of the variables from the file in Schedule.java
    public LabStats(int a, int b, int c, int d, int e, int f, int g, int h)
    {
        //Netbeans initialize
        initComponents();
        //a and b are for isOpen and isStrict
        //either 0 or 1 for false or true respectively
        //true is when the checkboxes are checked
        //false is the default if not specified
        if(a==1)
        {
            //the lab is open, record in the instance variable, and check the box
            isOpen = true;
            jCheckBox1.setSelected(true);
        }
        if(b==1)
        {
            //the time is strict, record in the instance variable, and check the box
            isStrict = true;
            jCheckBox2.setSelected(true);
        }
        //load the instance variables accordingly, and set the GUI value to match
        proctorNum = c;
        jSpinner1.setValue((Integer)c);
        tutorsNum = d;
        jSpinner2.setValue((Integer)d);
        minProctors = e;
        jSpinner3.setValue((Integer)e);
        minTutors = g;
        jSpinner6.setValue((Integer)g);
        maxProctors = f;
        jSpinner4.setValue((Integer)f);
        maxTutors = h;
        jSpinner5.setValue((Integer)h);

        //make the appropriate check box and spinners (number entry boxes)
        //visible or not visible
        jCheckBox2.setVisible(isOpen);

        jSpinner1.setVisible(isOpen && isStrict);
        jSpinner2.setVisible(isOpen && isStrict);
        jLabel1.setVisible(isOpen && isStrict);
        jLabel2.setVisible(isOpen && isStrict);
        
        jSpinner3.setVisible(isOpen && !isStrict);
        jSpinner4.setVisible(isOpen && !isStrict);
        jSpinner5.setVisible(isOpen && !isStrict);
        jSpinner6.setVisible(isOpen && !isStrict);
        jLabel3.setVisible(isOpen && !isStrict);
        jLabel4.setVisible(isOpen && !isStrict);
        jLabel5.setVisible(isOpen && !isStrict);
        jLabel6.setVisible(isOpen && !isStrict);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox2.setVisible(false);
        jLabel1 = new javax.swing.JLabel();
        jLabel1.setVisible(false);
        jLabel2 = new javax.swing.JLabel();
        jLabel2.setVisible(false);
        jLabel3 = new javax.swing.JLabel();
        jLabel3.setVisible(false);
        jLabel4 = new javax.swing.JLabel();
        jLabel4.setVisible(false);
        jLabel5 = new javax.swing.JLabel();
        jLabel5.setVisible(false);
        jLabel6 = new javax.swing.JLabel();
        jLabel6.setVisible(false);
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner1.setVisible(false);
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner2.setVisible(false);
        jSpinner3 = new javax.swing.JSpinner();
        jSpinner3.setVisible(false);
        jSpinner4 = new javax.swing.JSpinner();
        jSpinner4.setVisible(false);
        jSpinner5 = new javax.swing.JSpinner();
        jSpinner5.setVisible(false);
        jSpinner6 = new javax.swing.JSpinner();
        jSpinner6.setVisible(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(339, 231));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jCheckBox1.setText("Lab Open?");
        jCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Strict Schedule?");
        jCheckBox2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel1.setText("# of Proctors");

        jLabel2.setText("# of Tutors/GAs");

        jLabel3.setText("max # of Proctors");

        jLabel4.setText("min # of Proctors");

        jLabel5.setText("min # of Tutors/GAs");

        jLabel6.setText("max # of Tutors/GAs");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner1.setToolTipText("");

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner2.setToolTipText("");

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner3.setToolTipText("");

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner4.setToolTipText("");

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner5.setToolTipText("");

        jSpinner6.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner6.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(149, 149, 149))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        //if the isOpen check box is selected or not, make the appropriate other
        //boxes visible or not visible
        isOpen = jCheckBox1.isSelected();
        jCheckBox2.setVisible(isOpen);

        jSpinner1.setVisible(isOpen && isStrict);
        jSpinner2.setVisible(isOpen && isStrict);
        jLabel1.setVisible(isOpen && isStrict);
        jLabel2.setVisible(isOpen && isStrict);
        
        jSpinner3.setVisible(isOpen && !isStrict);
        jSpinner4.setVisible(isOpen && !isStrict);
        jSpinner5.setVisible(isOpen && !isStrict);
        jSpinner6.setVisible(isOpen && !isStrict);
        jLabel3.setVisible(isOpen && !isStrict);
        jLabel4.setVisible(isOpen && !isStrict);
        jLabel5.setVisible(isOpen && !isStrict);
        jLabel6.setVisible(isOpen && !isStrict);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        //if the isStrict check box is selected or not, make the appropriate other
        //boxes visible or not visible
        isStrict = jCheckBox2.isSelected();
        
        jSpinner1.setVisible(isStrict);
        jSpinner2.setVisible(isStrict);
        jLabel1.setVisible(isStrict);
        jLabel2.setVisible(isStrict);
        
        jSpinner3.setVisible(!isStrict);
        jSpinner4.setVisible(!isStrict);
        jSpinner5.setVisible(!isStrict);
        jSpinner6.setVisible(!isStrict);
        jLabel3.setVisible(!isStrict);
        jLabel4.setVisible(!isStrict);
        jLabel5.setVisible(!isStrict);
        jLabel6.setVisible(!isStrict);
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        //when the window closes, save the values in the GUI to the instance variables
        proctorNum = Integer.parseInt(jSpinner1.getValue().toString());
        minTutors = Integer.parseInt(jSpinner6.getValue().toString());
        maxTutors = Integer.parseInt(jSpinner5.getValue().toString());
        minProctors = Integer.parseInt(jSpinner3.getValue().toString());
        maxProctors = Integer.parseInt(jSpinner4.getValue().toString());
        tutorsNum = Integer.parseInt(jSpinner2.getValue().toString());
        
        //System.out.println(proctorNum);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LabStats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LabStats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LabStats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LabStats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LabStats().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    // End of variables declaration//GEN-END:variables
    //private variables
    private boolean isOpen = false;
    private boolean isStrict = false;
    private int proctorNum;
    private int tutorsNum;
    private int minProctors;
    private int minTutors;
    private int maxProctors;
    private int maxTutors;
    
    //getter methods for private variables
    public boolean getIsOpen()      {return isOpen;}
    public boolean getIsStrict()    {return isStrict;}
    public int getTutorsNum()       {return tutorsNum;}
    public int getProctorNum()      {return proctorNum;}
    public int getMinProctors()     {return minProctors;}
    public int getMaxProctors()     {return maxProctors;}
    public int getMinTutors()       {return minTutors;}
    public int getMaxTutors()       {return maxTutors;}
    
    //used to output the information on all of the variables to file when requested
    public String toString()
    {
        //turn isOpen and isStrict from boolean to int for passing to file
        //true = 1 ; false = 0
        int a = 0;
        int b = 0;
        if(isOpen)
            a = 1;
        if(isStrict)
            b = 1;
        //return a string of 8 integers separated by a single space
        return (a+" "+b+" "+proctorNum+" "+tutorsNum+" "+minProctors+" "+maxProctors+" "+minTutors+" "+maxTutors);
    }
}